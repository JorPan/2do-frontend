[{"/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/index.js":"1","/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/App.js":"2","/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/reportWebVitals.js":"3","/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/components/TodoContainer.js":"4","/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/components/TodoItem.js":"5","/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/components/TodoForm.js":"6","/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/helpers/index.js":"7","/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/components/SignUpForm.js":"8","/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/components/PrivateRoute.js":"9","/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/components/Home.js":"10"},{"size":308,"mtime":1614361618805,"results":"11","hashOfConfig":"12"},{"size":3892,"mtime":1614380607281,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611598562258,"results":"14","hashOfConfig":"12"},{"size":399,"mtime":1611797889587,"results":"15","hashOfConfig":"12"},{"size":879,"mtime":1611798068953,"results":"16","hashOfConfig":"12"},{"size":2288,"mtime":1614378811103,"results":"17","hashOfConfig":"12"},{"size":723,"mtime":1614380260563,"results":"18","hashOfConfig":"12"},{"size":1617,"mtime":1614380876642,"results":"19","hashOfConfig":"12"},{"size":370,"mtime":1614363032609,"results":"20","hashOfConfig":"12"},{"size":366,"mtime":1614378736872,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ud8lta",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/index.js",[],["48","49"],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/App.js",["50","51","52"],"import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TodoContainer from \"./components/TodoContainer\";\nimport TodoForm from \"./components/TodoForm\";\nimport { patchTodo, postTodo, deleteTodo } from \"./helpers\";\nimport SignUpForm from \"./components/SignUpForm\";\nimport { Route, Switch, Redirect, Link } from \"react-router-dom\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Home from \"./components/Home\";\n\nconst todosUrl = \"http://localhost:3000/todos\";\n\nclass App extends Component {\n  state = {\n    todos: [],\n    user: {},\n    alerts: [],\n  };\n\n  componentDidMount() {\n    this.authorize_user();\n  }\n\n  authorize_user = () => {\n    fetch(\"http://localhost:3000/profile\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        this.setState({\n          user: response.user,\n          todos: response.todos,\n        });\n      });\n  };\n\n  addTodo = (newTodo) => {\n    this.setState({\n      todos: [...this.state.todos, newTodo],\n    });\n    postTodo(newTodo, this.state.user);\n    window.location.reload(false);\n  };\n\n  updateTodo = (updatedTodo) => {\n    let todos = this.state.todos.map((todo) =>\n      todo.id === updatedTodo.id ? updatedTodo : todo\n    );\n    this.setState({ todos });\n    patchTodo(updatedTodo);\n  };\n\n  deleteTodo = (id) => {\n    let filteredTodos = this.state.todos.filter((todo) => todo.id !== id);\n    this.setState({ todos: filteredTodos });\n    deleteTodo(id);\n  };\n\n  login = ({ username, password }) => {\n    return fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.errors) {\n          this.setState({ alerts: response.errors });\n        } else {\n          localStorage.setItem(\"token\", response.token);\n          this.setState({\n            user: response.user,\n            alerts: [\"Successful Login!\"],\n            todos: response.todos,\n          });\n        }\n      });\n  };\n\n  signUp = (user) => {\n    return fetch(\"http://localhost:3000/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ user }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.errors) {\n          this.setState({ alerts: response.errors });\n        } else {\n          localStorage.setItem(\"token\", response.token);\n          this.setState({\n            user: response.user,\n            alerts: [\"User successfully created!\"],\n            todos: response.todos,\n          });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          {this.state.user ? (\n            <>\n              <p>Welcome Back {this.state.user.username}</p>\n              <nav>\n                <Link to=\"/signup\">Logout</Link>\n              </nav>\n            </>\n          ) : null}\n        </header>\n        <h1 className=\"title\">2doIfy</h1>\n        <Switch>\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={Home}\n            submitAction={this.addTodo}\n            updateTodo={this.updateTodo}\n            deleteTodo={this.deleteTodo}\n            todos={this.state.todos}\n          />\n          <Route\n            exact\n            path=\"/signup\"\n            render={(routerProps) => (\n              <SignUpForm\n                {...routerProps}\n                login={this.login}\n                signUp={this.signUp}\n                alerts={this.state.alerts}\n              />\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/reportWebVitals.js",[],["53","54"],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/components/TodoContainer.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/components/TodoItem.js",[],["55","56"],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/components/TodoForm.js",["57"],"import React, { Component } from \"react\";\n\nconst initialState = {\n  title: \"\",\n  content: \"\",\n  urgent: false,\n  done: false,\n};\n\nexport default class TodoForm extends Component {\n  state = initialState;\n\n  componentDidMount() {\n    const { todo } = this.props;\n    if (this.props.todo) {\n      const { id, title, content, urgent, done } = todo;\n      this.setState({\n        id,\n        title,\n        content,\n        urgent,\n        done,\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    let { name, value, checked } = event.target;\n    value = name === \"urgent\" || name === \"done\" ? checked : value;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.submitAction(this.state);\n    if (this.props.handleToggle) {\n      this.props.handleToggle();\n    }\n  };\n\n  showDoneCheckbox = () => {\n    return this.props.todo ? (\n      <div className=\"input-group\">\n        <label>Done</label>\n        <input\n          type=\"checkbox\"\n          name=\"done\"\n          checked={this.state.done}\n          onChange={this.handleChange}\n        />\n      </div>\n    ) : null;\n  };\n\n  showCloseButton = () => {\n    return this.props.todo ? (\n      <button className=\"close-button\" onClick={this.props.handleToggle}>\n        close form\n      </button>\n    ) : null;\n  };\n\n  render() {\n    const { title, content, urgent, done } = this.state;\n    return (\n      <form className=\"todo-form\" onSubmit={this.handleSubmit}>\n        {this.props.todo ? <h2>Edit Todo</h2> : <h2>Create a New Todo</h2>}\n        <label>Title</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={this.handleChange}\n        />\n        <label>Content</label>\n        <input\n          type=\"text\"\n          name=\"content\"\n          value={content}\n          onChange={this.handleChange}\n        />\n        <div className=\"input-group\">\n          <label>Urgent</label>\n          <input\n            type=\"checkbox\"\n            name=\"urgent\"\n            checked={urgent}\n            onChange={this.handleChange}\n          />\n        </div>\n        {this.showDoneCheckbox()}\n        <input className=\"submit-button\" type=\"submit\" value=\"Submit\" />\n        {this.showCloseButton()}\n      </form>\n    );\n  }\n}\n","/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/helpers/index.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/components/SignUpForm.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/components/PrivateRoute.js",["58"],"import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\n\nexport default function PrivateRoute({ path, component: Component, ...props }) {\n  return localStorage.token ? (\n    <Route\n      exact\n      path={path}\n      render={(routerProps) => <Component {...props} />}\n    />\n  ) : (\n    <Redirect to=\"/signup\" />\n  );\n}\n","/Users/pandasaywhat/Flatiron/learnLabs/4mod/2doify/front2do/src/components/Home.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":21},{"ruleId":"63","severity":1,"message":"67","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":16},{"ruleId":"63","severity":1,"message":"68","line":11,"column":7,"nodeType":"65","messageId":"66","endLine":11,"endColumn":15},{"ruleId":"59","replacedBy":"69"},{"ruleId":"61","replacedBy":"70"},{"ruleId":"59","replacedBy":"71"},{"ruleId":"61","replacedBy":"72"},{"ruleId":"63","severity":1,"message":"73","line":64,"column":37,"nodeType":"65","messageId":"66","endLine":64,"endColumn":41},{"ruleId":"63","severity":1,"message":"74","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":12},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'TodoContainer' is defined but never used.","Identifier","unusedVar","'TodoForm' is defined but never used.","'todosUrl' is assigned a value but never used.",["75"],["76"],["75"],["76"],"'done' is assigned a value but never used.","'Home' is defined but never used.","no-global-assign","no-unsafe-negation"]